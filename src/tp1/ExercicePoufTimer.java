/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tp1;

import java.awt.event.*;
import javax.swing.Timer;
/**
 *
 * @author Yan Revuz
 */
public class ExercicePoufTimer extends javax.swing.JFrame {
    
    //Tous les etat de notre Automate
    private enum State {
        INITIAL, //etat initial
        INCREMNTE 
    }
    
    /* Etat en cours*/
    private State etatEnCours;
    
    /* Le compteur à afficher*/
    private int valeurCompteur;
    
    /* Represente la fréquence d'un tic du timer */
    private static final int DELAY_TIMER = 10;
    
    /* Le timer de notre application */
    private Timer timer;
    
    /*La valeur maximum du conpteur */
    private static final int VALEUR_MAX_COMPTEUR = 300;
    
    /**
     * Creates new form Exo2
     */
    public ExercicePoufTimer() {
        initComponents();
        init();
    }
    
    /* Déclaration des action réalisées lors d'un tic du timer */
    ActionListener taskPerformer = new ActionListener() {
        public void actionPerformed(ActionEvent evt) {
          switch(etatEnCours){
            case INITIAL:
                /* Interdit */
            case INCREMNTE:
                if (valeurCompteur < VALEUR_MAX_COMPTEUR) {
                    incrementCompteur();
                    printCompteur();
                    setEnabledStartButton(false);
                    setEnabledStopButton(true);
                    changeState(State.INCREMNTE);
                } else if (valeurCompteur == VALEUR_MAX_COMPTEUR) {
                    printCompteur();
                    startTimer();
                    setEnabledStartButton(true);
                    setEnabledStopButton(false);
                    changeState(State.INITIAL);                 
                }
                break;
            default:
                /* Interdit */
        }
      }
    };
    
    /* Methode d'initialisation */
    public void init(){
        setEnabledStopButton(false);
        setEnabledStartButton(true);
        this.timer = new Timer(DELAY_TIMER, taskPerformer);
        initCompteur();
        changeState(State.INITIAL);
    }
    
    /* Permet de desactiver / activer le boutton Stop */
    public void setEnabledStopButton(boolean enabled){
        this.stop.setEnabled(enabled);
    }
    
    /* Permet de desactiver / activer le boutton Start */
    public void setEnabledStartButton(boolean enabled){
        this.start.setEnabled(enabled);
    }
    
    /* Permet de mettre le compteur à 0 */
    public void initCompteur(){
        this.valeurCompteur =0;
    }
    
    /* Permet d'incrementer le compteur */
    public void incrementCompteur(){
        this.valeurCompteur++;
    }
    
    /* Permet de changer la valeur du label */
    public void printCompteur(){
        this.compteurLabel.setText(this.valeurCompteur+"");
    }
    
    /* Permet de changer la valeur du label à POUF */
    public void printPouf(){
        this.compteurLabel.setText("POUF");
    }
    
    /* Permet de changer d'état */
    public void changeState(State state){
        this.etatEnCours = state;
    }
    
    /* Permet de demarrer le timer */
    public void startTimer(){
        this.timer.start();
    }
    
    /* Permet d'interrompre le compteur */
    public void stopTimer(){
        this.timer.stop();
    }
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        start = new javax.swing.JButton();
        stop = new javax.swing.JButton();
        compteurLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        start.setText("jButton1");
        start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startActionPerformed(evt);
            }
        });

        stop.setText("jButton2");
        stop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopActionPerformed(evt);
            }
        });

        compteurLabel.setText("jLabel1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(start)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 99, Short.MAX_VALUE)
                .addComponent(stop)
                .addGap(90, 90, 90))
            .addGroup(layout.createSequentialGroup()
                .addGap(165, 165, 165)
                .addComponent(compteurLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(start)
                    .addComponent(stop))
                .addGap(91, 91, 91)
                .addComponent(compteurLabel)
                .addContainerGap(125, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startActionPerformed
        switch(this.etatEnCours){
            case INITIAL:
                initCompteur();
                printCompteur();
                startTimer();
                setEnabledStartButton(false);
                setEnabledStopButton(true);
                changeState(State.INCREMNTE);
                break;
            case INCREMNTE:
                /* Interdir */
                break;
            default:
                /* Interdit */
        }
    }//GEN-LAST:event_startActionPerformed

    private void stopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopActionPerformed
        switch(this.etatEnCours){
            case INITIAL:
                /* Interdit */
                break;
            case INCREMNTE:
                printPouf();
                stopTimer();
                setEnabledStartButton(true);
                setEnabledStopButton(false);
                changeState(State.INITIAL);
            default:
                /* Interdit */
        }
    }//GEN-LAST:event_stopActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ExercicePoufTimer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ExercicePoufTimer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ExercicePoufTimer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExercicePoufTimer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ExercicePoufTimer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel compteurLabel;
    private javax.swing.JButton start;
    private javax.swing.JButton stop;
    // End of variables declaration//GEN-END:variables
}
